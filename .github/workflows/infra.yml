name: deploy app and infra

on:
  workflow_dispatch:
    # allows to execute manually
  
jobs:
  build:
    runs-on: ubuntu-latest
      
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up environment variables
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

    - name: Setup Terraform v0.14.0
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: 0.14.0
        terraform_wrapper: true
        
    - name: Setup Terraform version
      run: terraform --version
    - name: Setup Terraform wrapper path
      run: which terraform        

    - name: Setup Terragrunt v0.50.9
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.50.9/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt
        terragrunt -v


    - name: Terragrunt Destroy
      working-directory: ./infra/environments
      run: terragrunt destroy --auto-approve --terragrunt-non-interactive -lock=false 



    - name: Terragrunt Init
      working-directory: ./infra/environments
      run: terragrunt init --terragrunt-non-interactive -lock=false

    # Generates an execution plan for Terragrunt
    - name: Terragrunt Plan
      working-directory: ./infra/environments
      run: terragrunt plan --terragrunt-non-interactive -lock=false 

    - name: Terragrunt Apply
      working-directory: ./infra/environments
      run: terragrunt apply --auto-approve --terragrunt-non-interactive -lock=false 


    - name: validate that output exist
      run: |
        cat /tmp/output.txt
        
  # destroy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Terragrunt Destroy
  #     working-directory: ./infra/environments
  #     run: terragrunt destroy --auto-approve --terragrunt-non-interactive -lock=false 

    # - name: Terragrunt Destroy
    #   working-directory: ./infra/environments
    #   run: terragrunt destroy --auto-approve --terragrunt-non-interactive -lock=false #-var 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -var 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' --terragrunt-non-interactive -lock=false



#TODO:
#add terragrunt apply
#add step / job for app that depend on previous job/step 
