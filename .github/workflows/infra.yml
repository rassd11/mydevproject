name: create infrastructure

on:
  workflow_dispatch:
    # allows to execute manually
  
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
      state_bucket_name: ${{ secrets.state_bucket_name }}

      
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API token
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.0
        terraform_wrapper: true
        
    - name: Setup Terraform version
      run: terraform --version
    - name: Setup Terraform wrapper path
      run: which terraform

    - name: Setup Terragrunt version 0.50.9
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: 0.50.9
        token: ${{ secrets.GITHUB_TOKEN }}

    # Initialize a new or existing Terragrunt working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terragrunt Init
      run: terragrunt init --terragrunt-non-interactive

    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2

    #   - name: Set up Terraform
    #     uses: hashicorp/setup-terraform@v1
    #     with:
    #       terraform_version: 0.14.0

    #   - name: Gruntwork Terragrunt
    #     uses: gruntwork-io/terragrunt-action@v2.0.2
    #     with:
    #       tg_version: 0.50.9
    #       tf_version: 0.14.0
    #       tg_command: "terragrunt init && terragrunt plan -lock=false"
    #       tg_dir: ./infra/environments
    #       tg_comment: 0
    #       tg_add_approve: 1


          
          


      
 #     - name: Setup working dir
        
      # - name: Run terraform steps
#          working-directory: ./infra/environments
      #   uses: hashicorp/setup-terraform@v1
          
      #   with:
      #     terraform_wrapper: false
      # - run: terraform init
      # - run: terraform plan
      # - name: Apply Terraform changes
      #   id: apply
      #   run: terraform apply --auto-approve -lock=false
      # - name: destroy
      #   run: terragrunt destroy --auto-approve -lock=false   #remove later if works
